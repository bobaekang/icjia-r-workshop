?as.tibble()
?dpylr::as.tibble()
install.packages("tibble")
library(icjiar)
library(dplyr)
# fbicrime_tbl <- tibble::as.tibble(fbicrime)
ispcrime_tbl <- tibble::as.tibble(ispcrime)
regions_tbl <- tibble::as.tibble(regions)
library()
install.packages("tibble")
library(tibble)
install.packages("tibble")
library(icjiar)
library(utf8)
install.packages("utf8")
library(icjiar)
class(ispcrime)  # the class of iris object is "data.frame"
is.data.frame(ispcrime)  # check if iris is a data.frame; TRUE, as expected
str(ispcrime)  # reports the "structure" of the data frame
head(ispcrime, 5)  # returns the first n rows of the data frame (default 6)
dim(ispcrime)  # returns the dimension of the data frame (row  column)
nrow(ispcrime)  # returns the number of rows in the data frame
ncol(ispcrime)  # returns the number of columns in the data frame
colnames(ispcrime)  # returns a vector containing the column names
ispcrime$year  # access a column by name
ispcrime[[1]]  # access the first column by index
ispcrime[, 1]  # yet another way to access the first column!
ispcrime[1, ]  # access the first row by index
ispcrime[1, 1] # access a specific cell (first row of the first column)
library(ispcrime)
iris %>%
mutate(
`year/county` = paste(year, "/", county, sep = ""),
`violentCrime/propertyCrime` = paste(violentCrime, "/", propertyCrime, sep = "")
) %>%
select(`year/county`, `violentCrime/propertyCrime`) %>%
head()
library(dplyr)
library(ispcrime)
ispcrime %>%
mutate(
`year/county` = paste(year, "/", county, sep = ""),
`violentCrime/propertyCrime` = paste(violentCrime, "/", propertyCrime, sep = "")
) %>%
select(`year/county`, `violentCrime/propertyCrime`) %>%
head()
library(tidyr)
ispcrime2 <- ispcrime
ispcrime$index <- as.numeric(row.names(ispcrime))
ispcrime %>%
gather(murder, rape, robbery, aggAssualt, key = "type", value = "value") %>%
select(index, year, county, type, value) %>%
arrange(index) %>%
head(10)
library(tidyr)
ispcrime2 <- ispcrime
ispcrime$index <- as.numeric(row.names(ispcrime))
ispcrime %>%
gather(murder, rape, robbery, aggAssault, key = "type", value = "value") %>%
select(index, year, county, type, value) %>%
arrange(index) %>%
head(10)
library(tidyr)
ispcrime2 <- ispcrime
ispcrime$index <- as.numeric(row.names(ispcrime))
ispcrime %>%
gather(murder, rape, robbery, aggAssault, key = "typeViolent", value = "valueViolent") %>%
# cbind(
#   ispcrime %>%
#     gather(burglary, larcenyTft, MVTft, arson, key = "typeProperty", value = "valueProperty")
# ) %>%
# select(index, year, county, type, value) %>%
arrange(index) %>%
head(10)
library(tidyr)
ispcrime2 <- ispcrime
ispcrime$index <- as.numeric(row.names(ispcrime))
ispcrime %>%
gather(murder, rape, robbery, aggAssault, key = "typeViolent", value = "valueViolent") %>%
gather(burglary, larcenyTft, MVTft, arson, key = "typeProperty", value = "valueProperty") %>%
select(index, year, county, typeViolent, valueViolent, typeProperty, valueProperty) %>%
arrange(index) %>%
head(10)
library(tidyr)
ispcrime2 <- ispcrime
ispcrime$index <- as.numeric(row.names(ispcrime))
ispcrime %>%
gather(murder, rape, robbery, aggAssault, key = "typeViolent", value = "valueViolent") %>%
select(index, year, county, typeViolent, valueViolent, typeProperty, valueProperty) %>%
arrange(index) %>%
head(10)
library(tidyr)
ispcrime2 <- ispcrime
ispcrime$index <- as.numeric(row.names(ispcrime))
ispcrime %>%
gather(murder, rape, robbery, aggAssault, key = "typeViolent", value = "valueViolent") %>%
select(index, year, county, typeViolent, valueViolent) %>%
arrange(index) %>%
head(10)
?arrange()
?desc()
summarise(ispcrime, year, county)
summarise(ispcrime, year)
summarise()
?summarise()
summarise(ispcrime, mean_viol = mean(violentCrime))
summarise(ispcrime, mean_viol = mean(violentCrime, na.rm=T))
summarise(ispcrime, mean_viol = mean(violentCrime, na.rm=T), sd = sd(violentCrime, na.rm=T))
?left_join()
?aes()
?ggplot2::theme()
?ggplot2::theme_grey()
?labs()
class("hi")
length("hi")
?base_family
?theme_gray
windowsFont()
windowsFonts()
?read.table
read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data")
?read.table()
?labs()
?ggtitle()
?facet_grid
?facet_wrap
?lims()
knitr::kable(head(iris))
include_graphics("../images/rmarkdown9.png")
include_graphics("../images/rmarkdown9.png")
?coxph
?survival::coxph
vignette("survival")
1:10
sprintf("%s and %d", "a", 100)
a <- "a"; b <- 100
sprintf("%s and %d", a, b)
[1,2,3]
?cbind()
knitr::opts_chunk$set(echo = TRUE)
print("Look, a data frame!")
data.frame(
column1 = seq(1,5)*10 + 1,
column2 = seq(1,5)*10 + 2,
column3 = seq(1,5)*10 + 3,
column4 = seq(1,5)*10 + 4,
column5 = seq(1,5)*10 + 5
)
library(icjiar)
class(ispcrime)  # the class of ispcrime object is "data.frame"
is.data.frame(ispcrime)  # check if ispcrime is a data.frame; TRUE, as expected
str(ispcrime)  # reports the "structure" of the data frame
head(ispcrime, 5)  # returns the first n rows of the data frame (default 6)
dim(ispcrime)  # returns the dimension of the data frame (row  column)
nrow(ispcrime)  # returns the number of rows in the data frame
ncol(ispcrime)  # returns the number of columns in the data frame
colnames(ispcrime)  # returns a vector containing the column names
ispcrime$year
ispcrime[1, ]  # access the first row by index
ispcrime[1, 1]
fruits <- c("apple", "banana", "clementine")
animals <- c("dogs", "cats", "llamas")
icecream_flavors <- c("chocolate", "vanila", "cookie dough")
df1 <- data.frame(fruits, animals, icecream_flavors)
print(df1)
df2 <- data.frame(
fruits = c("apple", "banana", "clementine"),
animals = c("dogs", "cats", "llamas"),
icecream_flavors = c("chocolate", "vanila", "cookie dough")
)
print(df2)
lt <- list(
fruits = c("apple", "banana", "clementine"),
animals = c("dogs", "cats", "llamas"),
icecream_flavors = c("chocolate", "vanila", "cookie dough")
)
df3 <- as.data.frame(lt)
print(df3)
df1$a <- c(1, 2, 3, 4)
cbind(df1, c(1,2,3,4))
df1[2, ]
df1[, 2]
df1[, 3]
df1[, 4]
df1[, 4] <- c(1,2,3,4)
df1[, 4] <- c(1,2,3)
df1
df1[, 4] <- NA
df1
df[, 6] <- NA
df[, 6] <- c(1,2,3)
df[, 5] <- c(1,2,3)
df[, 4] <- c(1,2,3)
df1[, 6] <- c(1,2,3)
df1[, 4] <- c(1,2,3)
df1
df1$V4 <- NA
df1
df1$V4 <- NULL
df1
df1
df1[4,]
df1
df1[4,] <- c('1', '2', '3')
?data.frame()
?is.vector(c(1,2,3))
is.vector(c(1,2,3))
is.vector(1)
is.vector("a")
is.vector(NA)
is.vector(NULL)
a <- c(1,2,3)
?concat
library(icjiar)
library(tidyr)
library(dplyr)
head(ispcrime)
ispcrime %>%
select(-violentCrime, -propertyCrime) %>%
gather(key = "type", murder:arson)
ispcrime %>%
select(-violentCrime, -propertyCrime) %>%
gather(key = "type", value = "value", murder:arson)
ispcrime %>%
gather(key = "type", value = "value", violentCrime, propertyCrime)
ispcrime %>%
select(year, county, violentCrime, propertyCrime) %>%
gather(key = "type", value = "value", violentCrime, propertyCrime)
ispcrime %>%
select(year, county, violent = violentCrime, property = propertyCrime) %>%
gather(key = "type", value = "value", violent, property)
ispcrime %>%
select(year, county, violent = violentCrime, property = propertyCrime) %>%
gather(key = "crime_type", value = "count", violent, property)
colnames(ispcrime)
data.table::as.data.table(ispcrime)
data.table::as.data.table(ispcrime) %>% select(county, year)
library(icjiar)
library(highchart)
update.packages(checkBuilt=TRUE)
library(dplyr)
library(highcharter)
hchart(left_join(ispcrime, regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region))
hchart(left_join(select(ispcrime, county != "Cook"), regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region))
hchart(left_join(filter(ispcrime, county != "Cook"), regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region))
install.packages('yaml')
install.packages("yaml")
export_hc(hchart(left_join(filter(ispcrime, county != "Cook"), regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region)), filename="hchart")
library(highcharter)
hc <- hchart(left_join(filter(ispcrime, county != "Cook"), regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region))
library(dplyr)
hc <- hchart(left_join(filter(ispcrime, county != "Cook"), regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region))
library(icjiar)
hc <- hchart(left_join(filter(ispcrime, county != "Cook"), regions), type = "scatter", hcaes(x = violentCrime, y = propertyCrime, group = region))
hc
export_hc(hc, "../images/hchart")
library(plotly)
data <- ispcrime %>% filter(county != "Cook") %>% left_join(regions)
ggplot(data, aes(violentCrime, propertyCrime, colour = region)) %>%
geom_point()
p <- ggplot(data, aes(violentCrime, propertyCrime, colour = region)) +
geom_point()
ggplotly(p)
?plot_ly()
plot
_ly (
x =
c(
1,
2, 3 ),
y =
c(
5,
6,
7),
type = ‘scatter’ ,
mode = ‘lines’
)
plot_ly(x=c(1,2,3), y=c(4,5,6), type="scattor", mode="lines")
plot_ly(x=c(1,2,3), y=c(4,5,6), type="scatter", mode="lines")
plot_ly(x=c(1,2,3), y=c(4,5,6), type="scatter", mode="markers")
